
  % Преобразования базового процесса с использованием операций суммирования
% сдвинутых файлов длиной (L=length(y)+k+l) и cumsum(x). Исполняется после
% команды myfun, где рассчитывается процесс v/
v(1:10)=[];  % Очищение начальной части вектора v при х < 0 
 k=8; l=5; M=16; Nv=length(v); % Параметры фильтра b  процесса.

 j=[k,l,k+l]; % Номера отсчётов j  сдвига m-шага.
 q=[-1,-1,1];% Коэффициенты суммирования q  m-шага.
 d=[v,zeros(1,13)]; %  Начальное значение вектора d.
 
 for m=1:3 % Цикл задержек и суммирования.
     vd=[zeros(1,j(m)),v,zeros(1,13-j(m))];  % Задержка.
     d=d+q(m)*vd;  % Суммирование.
 end
 p=cumsum(d); % Уравнение: p(n)=p(n-1)+d(n) --> y(n)-н(n-1)=в(т), Тогда:
              % y(n)=cumsum(d)+y0, интеграл, у0=0, т.к. при n=0 d=0..   
 r=p+M*d;
 s=cumsum(r); % Связь та же, что и в пункте 20.
 figure;     %Шаблон 2 графика
 plot(s,'r') % Построение 2 графика
  hold on
 plot(v*100,'--g') % Добавление графика v, n>0.
  hold off