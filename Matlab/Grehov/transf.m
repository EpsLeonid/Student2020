function s=transf(x,y,k,l,M);
% Преобразования базового процесса с использованием операций  суммирования
% сдвинутых файлов длиной (L=length(y)+k+l) и cumsum(x). Альтернатива conv
v=y;
v(1:10)=[];  % Очищение начальной части вектора У при х < 0 

   % Параметры фильтра b  процесса.

 j=[k,l,k+l];  % Номера отсчётов j  сдвига m-шага.
 q=[-1,-1,1];  % Коэффициенты суммирования q  m-шага.
 d=[v,zeros(1,13)]; %  Начальное значение вектора d.
  
 for m=1:3  % Цикл задержек и суммирования.Свёртка, альтерн.: d=conv(v,h),
            % h(n(j))=q(j), остальные h(n)=0
     vd=[zeros(1,j(m)),v,zeros(1,13-j(m))];  % Задержка.
     d=d+q(m)*vd;  % Суммирование.
 end
 p=cumsum(d); % Уравнение: p(n)=p(n-1)+d(n) --> y(n)-н(n-1)=в(т), Тгда:
              % y(n)=cumsum(d)+y0, интеграл, у0=0, т.к. при n=0 d=0..   
 r=p+M*d;
 s=cumsum(r); % Связь та же, что и в пункте 18.
% figure;     %Шаблон  графикаю
% plot(s,'r') % Построение 2 графика
%  grid on 
 % xlabel('n')
 % ylabel('process S')