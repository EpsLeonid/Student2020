function [s] = try2(k, l, M, t, y)

d = 1:1:length(t);
   for i=1:1:length(t)
       % сравнение массива аргумента t с параметрами k и l поэлементно дл€ корректного 
       % выполнени€ первой функции алгоритма преобразовани€ сигнала в трапецеидальный
      if t(i) < l && t(i) < k % если t меньше и k, и l, занул€ютс€ все слагаемые функции, кроме первого 
          d(i) = y(i);
      elseif t(i) >= l && t(i) < k % если t меньше k, но больше l, занул€ютс€ все слагаемые функции, кроме первого и u(n-l)
          d(i) = y(i) - y(i-l);
      elseif (i) >= k && t(i) < l % если t меньше l, но больше k, занул€ютс€ все слагаемые функции, кроме первого и u(n-k)
          d(i) = y(i) - y(i-k);
      elseif t(i) >= k && t(i) >= l && t(i) < k+l % если t больше и k, и l, но меньше их суммы, занул€етс€ только последнее слогаемое
          d(i) = y(i) - y(i-k) - y(i-l);
      else % в противном случае, остаютс€ все слагаемые первой функции переменной   
          d(i) = y(i) - y(i-k) - y(i-l) + y(i-l-k);
      end
      % выполнение второй функции алгоритма 
      if t(i)< 1 
         p(i)=0; 
      else
         p(i)= p(i-1)+d(i); 
      end 
       % выполнение третьей и последней функций алгоритма         
      if t(i)< 1 
         s(i)=0; 
      else
         s(i)= s(i-1)+p(i)+M*d(i); 
      end
   end
end   
   

